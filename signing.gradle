import java.util.Properties

android {
    signingConfigs {
        release {
            def properties
            def propertiesFile = rootProject.file('signing.properties')
            if (propertiesFile.exists()) {
                properties = new Properties()
                properties.load(propertiesFile.newDataInputStream())
            }

            def getString = { String propertyName, String environmentName, String prompt ->
                return properties?.get(propertyName) ?: System.getenv(environmentName) ?:
                        System.console()?.readLine('\n' + prompt + ': ')
            }

            def tempKeystoreFile = file("${rootProject.projectDir}/temp_keystore_release.jks")

            if (System.getenv("STORE_FILE_BASE64") != null) {
                def keystoreBase64 = System.getenv("STORE_FILE_BASE64")
                byte[] decodedBytes = keystoreBase64.decodeBase64()
                tempKeystoreFile.writeBytes(decodedBytes)

                storeFile tempKeystoreFile
                storePassword System.getenv("STORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            } else {
                def storeFileFromPropsOrEnv = getString('storeFile', 'STORE_FILE', 'Store file')
                if (storeFileFromPropsOrEnv != null) {
                    storeFile storeFileFromPropsOrEnv.with(rootProject.&file)
                } else {
                    throw new GradleException("Release signing configuration is incomplete. " +
                                              "Please provide STORE_FILE_BASE64, STORE_PASSWORD, KEY_ALIAS, KEY_PASSWORD " +
                                              "as environment variables (e.g., GitHub Secrets) or create a 'signing.properties' file.")
                }
                storePassword getString('storePassword', 'STORE_PASSWORD', 'Store password')
                keyAlias getString('keyAlias', 'KEY_ALIAS', 'Key alias')
                keyPassword getString('keyPassword', 'KEY_PASSWORD', 'Key password')
            }
        }
    }
}
